dnl **************************************************************
dnl Process this file with autoconf to produce a configure script.
dnl **************************************************************

AC_PREREQ(2.59)
AC_INIT
AC_CONFIG_SRCDIR([README])
AC_CONFIG_AUX_DIR(.)

dnl Detect the canonical host and target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE(adonthell, 0.4.0-alpha-3)
AM_CONFIG_HEADER([config.h])

dnl ********************
dnl Checks for programs.
dnl ********************

AC_PROG_LN_S
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_MAKE_SET

dnl *********
dnl Endianess
dnl *********

AC_C_BIGENDIAN(CXXFLAGS="$CXXFLAGS -D__BIG_ENDIAN__", :, :)
dnl AC_CHECK_HEADERS([asm/byteorder.h])

dnl ************************************
dnl set up Objective C compiler for OS X
dnl ************************************
_AM_DEPENDENCIES([OBJC])

OBJC="gcc"
AC_SUBST(OBJC)

if test x$ac_cv_cxx_compiler_gnu = xyes; then
   CXXFLAGS="$CXXFLAGS -fno-exceptions -fno-strict-aliasing"
fi

case "$target" in
    *-apple-darwin*)
		CXXFLAGS="$CXXFLAGS -Wno-long-double"
        osx="yes"
        ;;
esac

AM_CONDITIONAL(OSX_COMPILE, test x$osx = xyes)

AC_LIBTOOL_WIN32_DLL
AC_LIBTOOL_DLOPEN
AC_LIBLTDL_CONVENIENCE
AC_PROG_LIBTOOL
AC_SUBST(LIBLTDL)
CPPFLAGS="$CPPFLAGS $INCLTDL"
AC_CONFIG_SUBDIRS(libltdl)




dnl ********************
dnl Additional arguments
dnl ********************
AC_ARG_ENABLE(unix-install,
[  --disable-unix-install  Disable a Unix-like install (enabled by default)],
            unixinst=$enableval, unixinst=yes)
AC_ARG_WITH(data-dir,
[  --with-data-dir=DIR     Directory where game data will be installed],
            gamedatadir="$withval", gamedatadir=none)
AC_ARG_WITH(py-libs,
[  --with-py-libs=LIBS     Override Python libraries auto-detection],
            pylibs="$withval", pylibs=none)
AC_ARG_WITH(py-cflags,
[  --with-py-cflags=FLAGS  Override Python cflags auto-detection],
            pycflags="$withval", pycflags=none)


AC_CHECK_LIB(z, main,,echo "Adonthell requires Zlib. Exitting...";exit 1)

dnl ******************************
dnl Tell that we are using libtool
dnl ******************************
CXXFLAGS="$CXXFLAGS -DUSE_LIBTOOL"

dnl **********************
dnl Set the data directory
dnl **********************

if test x$gamedatadir = xnone; then
  if test x$unixinst = xno; then
    CXXFLAGS="$CXXFLAGS -DSINGLE_DIR_INST"
    case "$target" in
      *-*-darwin*)
        makebundle="yes"
        backenddir="../PlugIns"
        gamedatadir="../Resources"
      ;;
      *)
        gamedatadir="."
        backenddir="./lib/adonthell"
      ;;
    esac
  else
    case "$target" in
      *-*-cygwin* | *-*-mingw32*)
        gamedatadir="."
        backenddir="./lib/adonthell"
      ;;
      *-*-beos*)
        gamedatadir="/boot/home/config/share/adonthell"
      ;;
      *)
        backenddir="${libdir}/adonthell"
        gamedatadir="${datadir}/adonthell"
      ;;
    esac
  fi
fi

CXXFLAGS="$CXXFLAGS -DDATA_DIR=\"\\\"$gamedatadir\\\"\""
AC_SUBST(backenddir)


dnl ***************
dnl Find pkg-config
dnl ***************
AC_PATH_PROG(PKG_CONFIG, [pkg-config], [no])
if test x$PKG_CONFIG = xno ; then
    AC_MSG_ERROR([*** pkg-config not found. See http://www.freedesktop.org/software/pkgconfig/])
fi

if $PKG_CONFIG --atleast-pkgconfig-version 0.14 ; then
    :
else
    AC_MSG_ERROR([*** pkg-config too old; version 0.14 or better required.])
fi


dnl *****************
dnl Check for libxml2
dnl *****************
XML_VERSION=2.5.0
AM_PATH_XML2($XML_VERSION,
    :,
    AC_MSG_ERROR([*** libxml version >= $XML_VERSION not found!])
)


dnl *************
dnl Check for SDL
dnl *************

dnl try sdl >= 1.3.0 first
AM_PATH_SDL([1.3.0],
    [sdlbackenddir=sdl13],
	[
        SDL_VERSION=1.2.0
        AM_PATH_SDL([$SDL_VERSION],
            [sdlbackenddir=sdl],
            [AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])]
        )]
)

dnl *******************
dnl Check for SDL-mixer
dnl *******************

AC_CHECK_HEADER([SDL/SDL_mixer.h],,
	[AC_MSG_ERROR([*** Cannot find the SDL/SDL_mixer.h header
	goto http://www.libsdl.org to download or
	check with your distibution.]
	); exit])
AC_CHECK_LIB([SDL_mixer],
	[Mix_OpenAudio],
	[:],
	[AC_MSG_ERROR([*** Cannot find the SDL_mixer library
	goto http://www.libsdl.org to download or
	check with your distibution.]
	); exit])

dnl *******************
dnl Check for libpng
dnl *******************
dnl TODO Need to check for library also
AC_CHECK_HEADER([png.h],,
	[AC_MSG_ERROR([*** Cannot find the png.h header
	goto http://www.libpng.org/ to download or
	check with your distibution.]
	); exit])

dnl ****************
dnl Check for Python
dnl ****************

AM_PATH_PYTHON([2.0])

dnl convert windows paths to cygwin paths
case "$target" in
	*-*-cygwin* | *-*-mingw32*)
		pyexecdir=`cd $pyexecdir && pwd`
		pythondir=`cd $pythondir && pwd`
	;;
esac


   dnl Find the Python.h header file

if test "x$pycflags" = xnone; then
   AC_MSG_CHECKING(for Python header files)
   changequote(<<, >>)
   PYINCLUDE=`$PYTHON -c 'import sys ; print "%s/include/python%s" % (sys.prefix, sys.version[:3])'`
   changequote([, ])

   if test -r "$PYINCLUDE/Python.h"; then
      PY_CFLAGS="-I$PYINCLUDE"
      AC_SUBST(PY_CFLAGS)
   else
      AC_MSG_ERROR([Could not find Python.h in $PYINCLUDE])
   fi
   AC_MSG_RESULT(found)
else
   PY_CFLAGS=${pycflags}
   AC_MSG_CHECKING(for Python cflags)
   AC_MSG_RESULT($PY_CFLAGS)
   AC_SUBST(PY_CFLAGS)
fi

   dnl Find the Python library

if test "x$pylibs" = xnone; then
   AC_MSG_CHECKING(for Python library)
   PYLIB=""
   changequote(<<, >>)
   PYPREFIX=`$PYTHON -c 'import sys; print sys.prefix'`
   PYLIBVER=`$PYTHON -c 'import sys; print sys.version[:3]'`
   changequote([, ])

   dnl look for a framework build of python first
   fw=`echo "$PYPREFIX" | sed 's/.*\(Python\.framework\).*/\1/;'`
   if test "x$fw" != x && test "x$osx" = "xyes"; then
       PY_LIBS="-framework Python"
       PY_FWDIR="$PYPREFIX/lib/python$PYLIBVER/site-packages"
       PY_SPDIR="$libdir/python$PYLIBVER/site-packages"
       AC_SUBST(PY_FWDIR)
       AC_SUBST(PY_SPDIR)
       AC_MSG_RESULT(found)
   else
       py_paths="$PYPREFIX/lib64/python$PYLIBVER/config $PYPREFIX/lib64 \
	$PYPREFIX/lib/python$PYLIBVER/config $PYPREFIX/lib"

       dnl Try for specific version first, then the generic version, then panic

       for ppath in $py_paths ; do
           if test -r "$ppath/libpython$PYLIBVER.so" -o \
               -r "$ppath/libpython$PYLIBVER.a"; then
               PYLIB="-L$ppath -lpython$PYLIBVER"
               break
           fi
           if test -r "$ppath/libpython.so" -o \
                   -r "$ppath/libpython.a"; then
               PYLIB="-L$ppath -lpython"
               break
           fi
       done

       if test "x$PYLIB" != x ; then
           PY_LIBS="$PYLIB $PY_LIBS"
           AC_MSG_RESULT(found)
       else
           AC_MSG_ERROR([*** Python library not found])
       fi
   fi

   dnl Get the libraries that a static python library depends on
   AC_MSG_CHECKING(for Python's dependencies)

   py_extradeps=`$PYTHON -c 'import distutils.sysconfig; print distutils.sysconfig.get_config_var("LIBS")'`
   py_sysextradeps=`$PYTHON -c 'import distutils.sysconfig; print distutils.sysconfig.get_config_var("SYSLIBS")'`

   PY_DEPS="$py_extradeps $py_sysextradeps"

   AC_MSG_RESULT($PY_DEPS)

   dnl only GNU ld seems to know -E flag
   if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
       PY_LIBS="-Wl,-E $PY_LIBS $PY_DEPS"
   else
       PY_LIBS="$PY_LIBS $PY_DEPS"
   fi
   AC_SUBST(PY_LIBS)

else
   PY_LIBS=${pylibs}
   AC_MSG_CHECKING(for Python ld flags)
   AC_MSG_RESULT($PY_LIBS)
   AC_SUBST(PY_LIBS)
fi

AM_CONDITIONAL(PY_FRAMEWORK, test x$fw != x$PYPREFIX)

dnl **************
dnl Check for SWIG
dnl **************
SWIG_VERSION=1.3.24
SWIG_PROG($SWIG_VERSION)
SWIG_ENABLE_CXX()

dnl ************
dnl other checks
dnl ************

AC_CHECK_FUNCS(nanosleep,,)

AC_SUBST(CXXFLAGS)
AC_CHECK_FT2(6.0.0,
	:,
	AC_MSG_ERROR([*** Freetype version >= 6.0.0 not found!])
)
AC_SUBST(FT2_LIBS)
AC_SUBST(FT2_CFLAGS)

AC_SUBST(CXXFLAGS)
AC_SUBST(sdlbackenddir)

AC_CONFIG_FILES([
adonthell.pc
Makefile
src/Makefile
src/main/Makefile
src/base/Makefile
src/event/Makefile
src/gfx/Makefile
src/input/Makefile
src/audio/Makefile
src/gui/Makefile
src/python/Makefile
src/rpg/Makefile
src/world/Makefile
src/py-wrappers/Makefile
src/py-wrappers/adonthell/Makefile
src/py-wrappers/runtime/Makefile
doc/Makefile
test/Makefile
test/data/Makefile
])
AC_OUTPUT
